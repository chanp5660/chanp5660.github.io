name: Deploy site

on:
  push:
    branches:
      - master
      - main
    paths:
      - "assets/**"
      - "**.bib"
      - "**.html"
      - "**.js"
      - "**.liquid"
      - "**/*.md"
      - "**.yml"
      - "Gemfile"
      - "Gemfile.lock"
      - "!.github/workflows/axe.yml"
      - "!.github/workflows/broken-links.yml"
      - "!.github/workflows/deploy-docker-tag.yml"
      - "!.github/workflows/deploy-image.yml"
      - "!.github/workflows/docker-slim.yml"
      - "!.github/workflows/lighthouse-badger.yml"
      - "!.github/workflows/prettier.yml"
      - "!lighthouse_results/**"
      - "!CONTRIBUTING.md"
      - "!CUSTOMIZE.md"
      - "!FAQ.md"
      - "!INSTALL.md"
      - "!README.md"
  pull_request:
    branches:
      - master
      - main
    paths:
      - "assets/**"
      - "**.bib"
      - "**.html"
      - "**.js"
      - "**.liquid"
      - "**/*.md"
      - "**.yml"
      - "Gemfile"
      - "Gemfile.lock"
      - "!.github/workflows/axe.yml"
      - "!.github/workflows/broken-links.yml"
      - "!.github/workflows/deploy-docker-tag.yml"
      - "!.github/workflows/deploy-image.yml"
      - "!.github/workflows/docker-slim.yml"
      - "!.github/workflows/lighthouse-badger.yml"
      - "!.github/workflows/prettier.yml"
      - "!lighthouse_results/**"
      - "!CONTRIBUTING.md"
      - "!CUSTOMIZE.md"
      - "!FAQ.md"
      - "!INSTALL.md"
      - "!README.md"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    # available images: https://github.com/actions/runner-images#available-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MY_PAT }}  # 이 부분을 추가
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true
      - name: Update _config.yml ⚙️
        uses: fjogeleit/yaml-update-action@main
        with:
          commitChange: false
          valueFile: "_config.yml"
          propertyPath: "giscus.repo"
          value: ${{ github.repository }}
      - name: Install and Build 🔧
        run: |
          pip3 install --upgrade jupyter
          export JEKYLL_ENV=production
          bundle exec jekyll build
      - name: Purge unused CSS 🧹
        run: |
          npm install -g purgecss
          purgecss -c purgecss.config.js
      - name: Install Prettier
        run: npm install prettier
      - name: Check formatting with Prettier 🎨
        run: npx prettier . --check
        continue-on-error: true
      - name: Format code with Prettier 🎨
        if: failure()
        run: npx prettier . --write
      - name: Check links 🔗
        run: |
          npm install -g broken-link-checker
          blc http://localhost:4000 -ro --exclude-external
        continue-on-error: true  # 이 줄을 추가합니다
      - name: Deploy 🚀
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4.4.3
        with:
          folder: _site
          token: ${{ secrets.MY_PAT }}  # 이 부분을 추가
          branch: gh-pages  # 배포할 브랜치를 명시적으로 지정
          clean: true  # 배포 전 기존 파일 정리
          single-commit: true  # 단일 커밋으로 배포
